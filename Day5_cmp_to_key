

from functools import cmp_to_key
class Player:
    def __init__(self, name, score):
        self.name=name
        self.score=score
        
    #def __repr__(self):
        
    def comparator(a, b):
        if a.score> b.score : 
            return -1
        if a.score < b.score:
            return 1
        if a.name  < b.name:
            return -1
        if a.name > b.name:
            return 1
        else:
            return 0     


n = int(input())
data = []
for i in range(n):
    name, score = input().split()
    score = int(score)
    player = Player(name, score)
    data.append(player)
    
data = sorted(data, key=cmp_to_key(Player.comparator))
for i in data:
    print(i.name, i.score)
    
    
#Note:Cmp_to_key
#     It converts a comparison function into a key function. The comparison function must return 1, -1 and 0 for different conditions. It can be used in key functions such as sorted(), min(), max().    
